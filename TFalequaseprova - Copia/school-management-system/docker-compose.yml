version: '3.8'

services:
  # ========================================
  # BANCO DE DADOS POSTGRESQL
  # ========================================
  postgres:
    build:
      context: ./postgres
      dockerfile: Dockerfile
    container_name: school_postgres
    hostname: postgres
    environment:
      POSTGRES_USER: school_user
      POSTGRES_PASSWORD: school_password_123  # Senha mais segura
      POSTGRES_DB: school_db
      POSTGRES_INITDB_ARGS: "--encoding=UTF-8 --locale=pt_BR.UTF-8"
      TZ: America/Sao_Paulo
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./postgres/init:/docker-entrypoint-initdb.d
      - ./postgres/backups:/backups
      - ./postgres/logs:/var/log/postgresql
    ports:
      - "5432:5432"
    networks:
      - school_network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U school_user -d school_db -h localhost"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 60s
    restart: unless-stopped
    deploy:
      resources:
        limits:
          memory: 512M
          cpus: '0.5'
        reservations:
          memory: 256M
          cpus: '0.25'

  # ========================================
  # BACKEND DA APLICAÇÃO ESCOLAR
  # ========================================
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
      args:
        NODE_ENV: production
    container_name: school_backend
    hostname: backend
    environment:
      # Configurações do Banco
      DATABASE_URL: postgres://school_user:school_password_123@postgres:5432/school_db
      DB_HOST: postgres
      DB_PORT: 5432
      DB_NAME: school_db
      DB_USER: school_user
      DB_PASSWORD: school_password_123
      
      # Configurações da Aplicação
      PORT: 8080
      NODE_ENV: production
      TZ: America/Sao_Paulo
      
      # Configurações de Segurança
      JWT_SECRET: escola_jwt_secret_key_2024
      SESSION_SECRET: escola_session_secret_2024
      
      # Configurações de Email (para notificações)
      SMTP_HOST: smtp.gmail.com
      SMTP_PORT: 587
      SMTP_USER: escola@exemplo.com
      SMTP_PASS: senha_email
      
      # Configurações de Upload
      UPLOAD_PATH: /app/uploads
      MAX_FILE_SIZE: 10485760  # 10MB
    volumes:
      - ./backend/uploads:/app/uploads
      - ./backend/logs:/app/logs
    ports:
      - "8080:8080"
    networks:
      - school_network
    depends_on:
      postgres:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    restart: unless-stopped
    deploy:
      resources:
        limits:
          memory: 256M
          cpus: '0.3'

  # ========================================
  # FRONTEND DA APLICAÇÃO ESCOLAR
  # ========================================
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
      args:
        REACT_APP_API_URL: http://localhost:8080
    container_name: school_frontend
    hostname: frontend
    environment:
      TZ: America/Sao_Paulo
    ports:
      - "3001:80"  # Mudança: porta 3001 para não conflitar com Grafana
    networks:
      - school_network
    depends_on:
      backend:
        condition: service_healthy
    restart: unless-stopped
    deploy:
      resources:
        limits:
          memory: 128M
          cpus: '0.2'

  # ========================================
  # NGINX - PROXY REVERSO
  # ========================================
  nginx:
    image: nginx:alpine
    container_name: school_nginx
    hostname: nginx
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./nginx/ssl:/etc/nginx/ssl:ro
      - ./nginx/logs:/var/log/nginx
    ports:
      - "80:80"
      - "443:443"
    networks:
      - school_network
    depends_on:
      - frontend
      - backend
    restart: unless-stopped

  # ========================================
  # MONITORAMENTO - POSTGRES EXPORTER
  # ========================================
  postgres_exporter:
    image: wrouesnel/postgres_exporter:latest
    container_name: school_postgres_exporter
    hostname: postgres-exporter
    environment:
      DATA_SOURCE_NAME: "postgres://school_user:school_password_123@postgres:5432/school_db?sslmode=disable"
      PG_EXPORTER_EXTEND_QUERY_PATH: "/etc/postgres_exporter/queries.yaml"
    volumes:
      - ./monitoring/postgres-exporter/queries.yaml:/etc/postgres_exporter/queries.yaml:ro
    ports:
      - "9187:9187"
    networks:
      - school_network
    depends_on:
      postgres:
        condition: service_healthy
    restart: unless-stopped
    deploy:
      resources:
        limits:
          memory: 64M
          cpus: '0.1'

  # ========================================
  # MONITORAMENTO - PROMETHEUS
  # ========================================
  prometheus:
    image: prom/prometheus:latest
    container_name: school_prometheus
    hostname: prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--storage.tsdb.retention.time=30d'
      - '--web.enable-lifecycle'
      - '--web.enable-admin-api'
    volumes:
      - ./monitoring/prometheus:/etc/prometheus:ro
      - prometheus_data:/prometheus
    ports:
      - "9090:9090"
    networks:
      - school_network
    depends_on:
      - postgres_exporter
    restart: unless-stopped
    deploy:
      resources:
        limits:
          memory: 256M
          cpus: '0.3'

  # ========================================
  # MONITORAMENTO - GRAFANA
  # ========================================
  grafana:
    image: grafana/grafana:latest
    container_name: school_grafana
    hostname: grafana
    environment:
      GF_SECURITY_ADMIN_USER: admin
      GF_SECURITY_ADMIN_PASSWORD: escola123
      GF_USERS_ALLOW_SIGN_UP: false
      GF_INSTALL_PLUGINS: grafana-clock-panel,grafana-simple-json-datasource
      GF_DEFAULT_INSTANCE_NAME: "Sistema Escolar Grafana"
      GF_DATE_FORMATS_DEFAULT_TIMEZONE: America/Sao_Paulo
      TZ: America/Sao_Paulo
    volumes:
      - ./monitoring/grafana/provisioning:/etc/grafana/provisioning:ro
      - ./monitoring/grafana/dashboards:/var/lib/grafana/dashboards:ro
      - grafana_data:/var/lib/grafana
    ports:
      - "3000:3000"
    networks:
      - school_network
    depends_on:
      - prometheus
    restart: unless-stopped
    deploy:
      resources:
        limits:
          memory: 128M
          cpus: '0.2'

  # ========================================
  # MONITORAMENTO - ALERTMANAGER
  # ========================================
  alertmanager:
    image: prom/alertmanager:latest
    container_name: school_alertmanager
    hostname: alertmanager
    command:
      - '--config.file=/etc/alertmanager/alertmanager.yml'
      - '--storage.path=/alertmanager'
      - '--web.external-url=http://localhost:9093'
    volumes:
      - ./monitoring/alertmanager:/etc/alertmanager:ro
      - alertmanager_data:/alertmanager
    ports:
      - "9093:9093"
    networks:
      - school_network
    restart: unless-stopped
    deploy:
      resources:
        limits:
          memory: 64M
          cpus: '0.1'

  # ========================================
  # BACKUP AUTOMÁTICO
  # ========================================
  backup:
    build:
      context: ./backup
      dockerfile: Dockerfile
    container_name: school_backup
    hostname: backup
    environment:
      POSTGRES_HOST: postgres
      POSTGRES_DB: school_db
      POSTGRES_USER: school_user
      POSTGRES_PASSWORD: school_password_123
      BACKUP_SCHEDULE: "0 2 * * *"  # Todo dia às 2h da manhã
      BACKUP_RETENTION_DAYS: 30
      TZ: America/Sao_Paulo
    volumes:
      - ./backups:/backups
      - postgres_data:/var/lib/postgresql/data:ro
    networks:
      - school_network
    depends_on:
      postgres:
        condition: service_healthy
    restart: unless-stopped

# ========================================
# VOLUMES PERSISTENTES
# ========================================
volumes:
  postgres_data:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: ./data/postgres
  
  prometheus_data:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: ./data/prometheus
  
  grafana_data:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: ./data/grafana
  
  alertmanager_data:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: ./data/alertmanager

# ========================================
# REDES
# ========================================
networks:
  school_network:
    driver: bridge
    ipam:
      driver: default
      config:
        - subnet: 172.20.0.0/16
          gateway: 172.20.0.1
    driver_opts:
      com.docker.network.bridge.name: school_bridge
